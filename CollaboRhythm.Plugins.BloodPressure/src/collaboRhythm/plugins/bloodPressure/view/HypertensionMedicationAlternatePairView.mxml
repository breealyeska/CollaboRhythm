<?xml version="1.0"?>
<!---
 - Copyright 2013 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:view="collaboRhythm.plugins.bloodPressure.view.*"
		 creationComplete="creationCompleteHandler()">
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.bloodPressure.model.HypertensionMedication;
		import collaboRhythm.plugins.bloodPressure.model.HypertensionMedicationAlternatePair;

		[Bindable]
		private var _hypertensionMedicationAlternatePair:HypertensionMedicationAlternatePair;

		function init(hypertensionMedicationAlternatePair:HypertensionMedicationAlternatePair):void
		{
			_hypertensionMedicationAlternatePair = hypertensionMedicationAlternatePair;
		}

		private function creationCompleteHandler():void
		{
			primaryHypertensionMedicationView.init(_hypertensionMedicationAlternatePair.primaryHypertensionMedication);
			if (_hypertensionMedicationAlternatePair.secondaryHypertensionMedication)
			{
				secondaryHypertensionMedicationView.init(_hypertensionMedicationAlternatePair.secondaryHypertensionMedication);
				alternateMedicationHGroup.visible = true;
			}
		}

		private function createHypertensionMedicationView(hypertensionMedication:HypertensionMedication,
														  visible:Boolean):void
		{
			var hypertensionMedicationView:HypertensionMedicationView = new HypertensionMedicationView();
			hypertensionMedicationView.init(hypertensionMedication);
			hypertensionMedicationView.visible = visible;

			addElement(hypertensionMedicationView);
		}

		private function alternateMedicationLebel_clickHandler(event:MouseEvent):void
		{
			dispatchEvent(new HypertensionMedicationAlternatePairViewEvent(HypertensionMedicationAlternatePairViewEvent.ALTERNATE_SELECTED,
					_hypertensionMedicationAlternatePair, event.altKey, event.ctrlKey))
		}

		private function showWarningIcon(inactiveHypertensionMedication:HypertensionMedication):Boolean
		{
			if (inactiveHypertensionMedication)
			{
				if (inactiveHypertensionMedication.dose1SelectionArrayCollection.length != 0 ||
						inactiveHypertensionMedication.dose2SelectionArrayCollection.length != 0)
				{
					return true;
				}
			}

			return false;
		}
		]]></fx:Script>
	<view:HypertensionMedicationView id="primaryHypertensionMedicationView"
									 visible="{_hypertensionMedicationAlternatePair.primaryHypertensionMedication == _hypertensionMedicationAlternatePair.activeHypertensionMedication}"/>
	<view:HypertensionMedicationView id="secondaryHypertensionMedicationView"
									 visible="{_hypertensionMedicationAlternatePair.secondaryHypertensionMedication == _hypertensionMedicationAlternatePair.activeHypertensionMedication}"/>
	<s:HGroup id="alternateMedicationHGroup" verticalAlign="middle" left="230" height="30" visible="false">
		<s:Label id="alternateMedicationLabel" click="alternateMedicationLebel_clickHandler(event)"
				 text="Switch to {_hypertensionMedicationAlternatePair.inactiveHypertensionMedication.medicationClass}"/>
		<view:WarningIcon width="30" height="30"
						  visible="{showWarningIcon(_hypertensionMedicationAlternatePair.inactiveHypertensionMedication)}"/>
	</s:HGroup>
</s:Group>
