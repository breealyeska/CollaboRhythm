<?xml version="1.0"?>
<!---
  - Copyright 2013 John Moore, Scott Gilroy
  -
  - This file is part of CollaboRhythm.
  -
  - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  - version.
  -
  - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  - details.
  -
  - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  - <http://www.gnu.org/licenses/>.
  -->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   xmlns:view="collaboRhythm.plugins.bloodPressure.view.*"
					   title="HypertensionMedicationTitration"
		creationComplete="creationCompleteHandler(event)">
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.bloodPressure.controller.HypertensionMedicationTitrationAppController;
		import collaboRhythm.plugins.bloodPressure.model.HypertensionMedication;
		import collaboRhythm.plugins.bloodPressure.model.HypertensionMedicationTitrationModel;

		import mx.events.FlexEvent;

		[Bindable]
		private var _controller:HypertensionMedicationTitrationAppController;
		private var _model:HypertensionMedicationTitrationModel;

		override public function set data(value:Object):void
		{
			super.data = value;

			_controller = value as HypertensionMedicationTitrationAppController;
			_model = _controller.model;

		}

		private function creationCompleteHandler(event:FlexEvent):void
		{
			for each (var hypertensionMedication:HypertensionMedication in _model.primaryMedications)
			{
				var hypertensionMedicationView:HypertensionMedicationView = new HypertensionMedicationView();
				hypertensionMedicationView.init(hypertensionMedication);
				hypertensionMedicationView.addEventListener(HypertensionMedicationViewEvent.HYPERTENSION_MEDICATION_DOSE_CHOICE_CLICKED,
						hypertensionMedicationDoseChoice_clickHandler);
				hypertensionMedicationsVGroup.addElement(hypertensionMedicationView);
			}
		}

		private function hypertensionMedicationDoseChoice_clickHandler(event:HypertensionMedicationViewEvent):void
		{
			_controller.handleHypertensionMedicationDoseChoice(event.hypertensionMedication, event.doseChoice);
		}
		]]></fx:Script>
	<s:VGroup id="hypertensionMedicationsVGroup" width="50%" height="100%" gap="80">

	</s:VGroup>
</tablet:TabletViewBase>
