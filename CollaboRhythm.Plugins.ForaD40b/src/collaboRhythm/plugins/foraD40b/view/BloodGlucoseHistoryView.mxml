<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   resize="resizeHandler()"
					   title="Fora D40b Blood Glucose Meter History">
	<fx:Style>
		#foraLabel {
			fontSize: 30;
			fontWeight: bold;
		}

		#bloodGlucoseMeterLabel {
			fontSize: 20;
		}

		#historyLabel {
			fontSize: 36;
			color: #939598;
		}
	</fx:Style>
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.foraD40b.controller.BloodGlucoseHealthActionInputController;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModel;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModelCollection;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHistoryItemData;
		import collaboRhythm.plugins.schedule.shared.model.HealthActionInputModelAndController;
		import collaboRhythm.shared.collaboration.model.CollaborationLobbyNetConnectionServiceProxy;
		import collaboRhythm.shared.model.healthRecord.document.VitalSign;
		import collaboRhythm.shared.model.healthRecord.document.VitalSignsModel;

		import mx.binding.utils.BindingUtils;
		import mx.collections.ArrayCollection;
		import mx.events.PropertyChangeEvent;

		import spark.collections.Sort;
		import spark.collections.SortField;

		private var _dataInputModel:BloodGlucoseHealthActionInputModel;
		private var _dataInputController:BloodGlucoseHealthActionInputController;
		[Bindable]
		private var _bloodGlucoseArrayCollection:ArrayCollection;
		private var _touchInteraction:Boolean = false;

		override public function set data(value:Object):void
		{
			super.data = value;

			var dataInputModelAndController:HealthActionInputModelAndController = value as
					HealthActionInputModelAndController;

			_dataInputModel = BloodGlucoseHealthActionInputModel(dataInputModelAndController.healthActionInputModel);
			_dataInputController = BloodGlucoseHealthActionInputController(dataInputModelAndController.healthActionInputController);

			_bloodGlucoseArrayCollection = new ArrayCollection();
			for each (var bloodGlucoseVitalSign:VitalSign in _dataInputModel.healthActionModelDetailsProvider.record.vitalSignsModel.getVitalSignsByCategory(VitalSignsModel.BLOOD_GLUCOSE_CATEGORY))
			{
				var historyItemData:BloodGlucoseHistoryItemData = new BloodGlucoseHistoryItemData(bloodGlucoseVitalSign, _dataInputModel, _dataInputController);
				_bloodGlucoseArrayCollection.addItem(historyItemData);
			}

			var sort:Sort = new Sort();
			sort.fields = [new SortField("dateMeasuredStart")];
			sort.reverse();
			_bloodGlucoseArrayCollection.sort = sort;
			_bloodGlucoseArrayCollection.refresh();


			BindingUtils.bindSetter(bloodGlucoseHistoryListScrollerPosition_changeHandler, _dataInputModel,
					"bloodGlucoseHistoryListScrollerPosition");
		}

		private function bloodGlucoseHistoryListScrollerPosition_changeHandler(bloodGlucoseHistoryListScrollPosition:Number):void
		{
			if (!isNaN(bloodGlucoseHistoryListScrollPosition) && bloodGlucoseHistoryList)
			{
				bloodGlucoseHistoryList.dataGroup.verticalScrollPosition = bloodGlucoseHistoryListScrollPosition;
			}
		}

		private function bloodGlucoseHistoryList_changeHandler():void
		{
			var bloodGlucoseHistoryItemData:BloodGlucoseHistoryItemData = bloodGlucoseHistoryList.selectedItem as BloodGlucoseHistoryItemData;
			var bloodGlucoseVitalSign:VitalSign = bloodGlucoseHistoryItemData.bloodGlucoseVitalSign;
			if (bloodGlucoseVitalSign.triggeredHealthActionResults.length != 0)
			{
				_dataInputController.showHypoglycemiaActionPlanSummaryView(bloodGlucoseVitalSign.dateMeasuredStart);
			}
		}

		private function resizeHandler():void
		{
			if (width > height)
			{
				hypoGlycemiaActionPlanSummaryGroup.width = width / 2;
			}
			else
			{
				hypoGlycemiaActionPlanSummaryGroup.width = width;
			}
		}

		private function bloodGlucoseHistoryList_creationComplete():void
		{
			bloodGlucoseHistoryList.scroller.viewport.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE,
					propertyChangeHandler);
		}

		private function propertyChangeHandler(event:PropertyChangeEvent):void
		{
			if (event.property == "verticalScrollPosition" && _touchInteraction)
			{
				var verticalScrollPosition:Number = event.newValue as Number;
				_dataInputController.setBloodGlucoseHistoryListScrollPosition(verticalScrollPosition);
			}
		}

		private function bloodGlucoseHistoryList_touchInteractionStartHandler():void
		{
			_touchInteraction = true
		}

		private function bloodGlucoseHistoryList_touchInteractionEndHandler():void
		{
			_touchInteraction = false;
		}

		override public function homeButton_clickHandler():void
		{
			_dataInputController.removeCollaborationViewSynchronizationEventListener();

			super.homeButton_clickHandler();
		}
		]]></fx:Script>
	<s:VGroup id="hypoGlycemiaActionPlanSummaryGroup" height="100%" horizontalCenter="0" gap="10">
		<s:Group width="100%">
			<s:HGroup horizontalCenter="0">
				<s:Image source="http://www.mit.edu/~jom/temp/equipment/FORA D40b.png" width="120" height="120"
						 smooth="true"/>
				<s:VGroup gap="10" top="10">
					<s:VGroup paddingTop="10" gap="2">
						<s:Label id="foraLabel" text="Fora D40b"/>
						<s:Label id="bloodGlucoseMeterLabel" text="Blood Glucose Meter"/>
					</s:VGroup>
					<s:Label id="historyLabel" text="History"/>
				</s:VGroup>
			</s:HGroup>
			<s:Label id="dateMeasuredStartLabel" verticalCenter="2" right="10"/>
		</s:Group>
		<s:Group width="100%" height="100%">
			<s:List id="bloodGlucoseHistoryList" dataProvider="{_bloodGlucoseArrayCollection}"
					itemRenderer="collaboRhythm.plugins.foraD40b.view.BloodGlucoseItemRenderer"
					creationComplete="bloodGlucoseHistoryList_creationComplete()"
					touchInteractionStart="bloodGlucoseHistoryList_touchInteractionStartHandler()"
					touchInteractionEnd="bloodGlucoseHistoryList_touchInteractionEndHandler()"
					change="bloodGlucoseHistoryList_changeHandler()" width="100%" height="100%"/>
			<s:Rect width="100%" height="100%">
				<s:stroke>
					<s:SolidColorStroke color="0x000000"/>
				</s:stroke>
			</s:Rect>
		</s:Group>
	</s:VGroup>

</tablet:TabletViewBase>
