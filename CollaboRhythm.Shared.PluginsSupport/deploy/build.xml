<?xml version="1.0" encoding="UTF-8"?>
<!--~
  ~ Copyright 2011 John Moore, Scott Gilroy
  ~
  ~ This file is part of CollaboRhythm.
  ~
  ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  ~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  ~ version.
  ~
  ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  ~ <http://www.gnu.org/licenses/>.
  -->
<project name="PluginDeployment" default="deploy_all_plugins">

	<!--
		This is a build script for deploying a CollaboRhythm plugins. It currently deploys plugins to the following
		locations:
			1. The plugins folder on the local development machine for CollaboRhythm.Workstation (which should be run/debugged locally)
			2. The plugins folder on the local development machine for CollaboRhythm.Mobile (which should be run/debugged locally via the emulator)
			3. The plugins folder on the local development machine for CollaboRhythm.Tablet (which should be run/debugged locally via the emulator)
			4. The plugins folder on a connected Android device for CollaboRhythm.Mobile (which should be run/debugged on the device)
			5. The plugins folder on a connected Android device for CollaboRhythm.Tablet (which should be run/debugged on the device)

		Note that this script does NOT build the plugin project. Instead, it relies on your IDE to build the project and generate
		the appropriate module SWF. This script is ONLY for deploying the plugin.
	-->
	
	<!--
		The sdk.dir is the path to the Android SDK on your local machine.
		To override this value on your local machine, you should
			1. Create a file named local.properties in the same directory as this build script.
			2. Open the local.properties file.
			3. Modify the value for sdk.dir and save the file. On Windows, backslashes in the path must be escaped as follows:
				sdk.dir=/Applications/Android Studio.app/sdk-windows
			4. Attempt to deploy again.
			
		Creating a local.properties file can (in theory) also be done using the 'android' tool.

		local.properties should *NOT* be checked-in to Version Control Systems.
	-->
	
	<property environment="env"/>
	<property name="app.data" location="${user.home}/Library/Application Support" />

<!--
	<propertyfile
		file="bin-debug/local.properties"
		comment="Local properties for CollaboRhythm plugin deployment. This file must *NOT* be checked in Version Control Systems, as it contains information specific to your local configuration.">
		<entry key="collaboRhythm.pluginDeployment.deploymentCount" type="int" default="0" operation="+" />
		<entry key="sdk.dir" default="/Applications/Android Studio.app/sdk" />
		<entry key="collaboRhythm.workstation.pluginsPath" default="${app.data}/CollaboRhythm.Workstation/Local Store/plugins" />
		<entry key="collaboRhythm.mobile-emulator.pluginsPath" default="${app.data}/CollaboRhythm.Mobile.debug/Local Store/plugins" />
		<entry key="collaboRhythm.mobile-device.pluginsPath" default="/storage/sdcard0/CollaboRhythm.Mobile.debug/Local Store/plugins" />
	</propertyfile>
-->

<!--		<entry key="collaboRhythm.pluginDeployment.lastDeployedDate" type="date" value="now" pattern="EEE, dd MMM yyyy HH:mm:ss z"/> -->

	<!-- The build.properties file can be created by you and is never touched
         by the 'android' tool. This is the place to change some of the default property values
         used by the Ant rules.
         Here are some properties you may want to change/update:

         application.package
             the name of your application package as defined in the manifest. Used by the
             'uninstall' rule.
         source.dir
             the name of the source directory. Default is 'src'.
         out.dir
             the name of the output directory. Default is 'bin'.

         Properties related to the SDK location or the project target should be updated
          using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your application and
         should be checked in in Version Control Systems.

         -->

	<!--
		Note that we look for .properties files in two places:
			1.	The current base directory. This allows for settings to be (optionally) read from the directory of a
				specific plugin.
			2.	The CollaboRhythm.Shared.PluginsSupport/deploy directory. This allows us to maintain a single copy of
				each properties file for all of the plugins and thus avoid duplication.
	-->
	<property file="local.properties" />
	<property file="../CollaboRhythm.Shared.PluginsSupport/deploy/local.properties" />
	<property file="build.properties" />
	<property file="../CollaboRhythm.Shared.PluginsSupport/deploy/build.properties" />


    <!-- The default.properties file is created and updated by the 'android' tool, as well
         as ADT.
         This file is an integral part of the build system for your application and
         should be checked in in Version Control Systems. -->
	<property file="default.properties" />
	<property file="../CollaboRhythm.Shared.PluginsSupport/deploy/default.properties" />

	<target name="deploy" description="Deploys one specific plugin module SWF file.">
	
		<!-- The Location you wish to output to on your Computer -->
		<property name="project.output.binaryPath" location="${basedir}/bin-debug"/>

		<!-- Copy all modules. Note that we don't have a good way to distinguish module SWFs from other SWFs,
			 so we are relying on the convention of including Module or Plugin in the name of the plugin module SWFs -->
		
		<!--
			TODO: Support multiple plugin SWFs; currently, if there is more than one SWF that matches the criteria,
			${toString:project.output.modulePaths} will look like first.swf;second.swf and the adb push will fail.
		-->
	    <path id="project.output.modulePaths">
			<fileset id="project.output.modulePaths.fileset" dir="${project.output.binaryPath}" casesensitive="no">
			  <include name="**/*Module*.swf"/>
			  <include name="**/*Plugin*.swf"/>
			</fileset>
	    </path>
		
		<echoproperties>
			<propertyset>
				<propertyref prefix="sdk.dir"/>
			</propertyset>
			<propertyset>
				<propertyref prefix="collaboRhythm."/>
			</propertyset>
		</echoproperties>
		
		<echo>Basedir: ${basedir}</echo>
		<echo>Deploying plugin: ${toString:project.output.modulePaths}</echo>
			
		<copy todir="${collaboRhythm.workstation.pluginsPath}" flatten="true" verbose="true">
			<fileset refid="project.output.modulePaths.fileset" />
		</copy>
		<copy todir="${collaboRhythm.mobile-emulator.pluginsPath}" flatten="true" verbose="true">
			<fileset refid="project.output.modulePaths.fileset" />
		</copy>
		<copy todir="${collaboRhythm.tablet-emulator.pluginsPath}" flatten="true" verbose="true">
			<fileset refid="project.output.modulePaths.fileset" />
		</copy>

		<!-- TODO: eliminate the error message for when the directory already exists -->
		<exec executable="${sdk.dir}/platform-tools/adb">
			<arg value="shell"/>
			<arg value="mkdir"/>
			<arg value="${collaboRhythm.mobile-device.pluginsPath}"/>
		</exec>

		<echo>Pushing ${toString:project.output.modulePaths} to ${collaboRhythm.mobile-device.pluginsPath}</echo>
		<exec executable="${sdk.dir}/platform-tools/adb">
			<arg value="push"/>
			<arg value="${toString:project.output.modulePaths}"/> <!-- Note: this only works if there is just one matching plugin file -->
			<arg value="${collaboRhythm.mobile-device.pluginsPath}"/>
		</exec>

		<!-- TODO: eliminate the error message for when the directory already exists -->
		<exec executable="${sdk.dir}/platform-tools/adb">
			<arg value="shell"/>
			<arg value="mkdir"/>
			<arg value="${collaboRhythm.tablet-device.pluginsPath}"/>
		</exec>

		<echo>Pushing ${toString:project.output.modulePaths} to ${collaboRhythm.tablet-device.pluginsPath}</echo>
		<exec executable="${sdk.dir}/platform-tools/adb">
			<arg value="push"/>
			<arg value="${toString:project.output.modulePaths}"/> <!-- Note: this only works if there is just one matching plugin file -->
			<arg value="${collaboRhythm.tablet-device.pluginsPath}"/>
		</exec>

		<echo>Deployment of plugin complete. ------------------------|</echo>
	</target>

	<target name="deploy_all_plugins" description="Deploys all of the plugins." depends="delete_all_plugins">
	    <path id="project.build.pluginBuildScripts">
			<fileset id="project.build.pluginBuildScripts.fileset" dir="../../" casesensitive="no"
					excludes="${project.build.pluginBuildScripts.excludes}">
				<include name="*CollaboRhythm.Plugins.*/build.xml"/>
			</fileset>
	    </path>

		<echo>Found plugin build scripts: ${toString:project.build.pluginBuildScripts}</echo>

		<!-- TODO: Use contributed taskdef to do a "for" loop -->
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="ant-contrib-1.0b3.jar"/>
			</classpath>
		</taskdef>

		<for param="file" keepgoing="true">
			<path refid="project.build.pluginBuildScripts"/>
			<sequential>
				<ant antfile="@{file}" dir="@{file}/../" target="deploy"/>
			</sequential>
		</for>
	</target>

	<target name="delete_all_plugins" description="Deletes all plugins from deployment folders (local and on device)">
		<mkdir dir="${collaboRhythm.workstation.pluginsPath}" />
		<mkdir dir="${collaboRhythm.mobile-emulator.pluginsPath}" />
		<mkdir dir="${collaboRhythm.tablet-emulator.pluginsPath}" />
		<delete>
			<fileset dir="${collaboRhythm.workstation.pluginsPath}" includes="*.swf"/>
		</delete>
		<delete>
			<fileset dir="${collaboRhythm.mobile-emulator.pluginsPath}" includes="*.swf"/>
		</delete>
		<delete>
			<fileset dir="${collaboRhythm.tablet-emulator.pluginsPath}" includes="*.swf"/>
		</delete>
		<exec executable="${sdk.dir}/platform-tools/adb">
			<arg value="shell"/>
			<arg value="cd"/>
			<arg value='"${collaboRhythm.mobile-device.pluginsPath}"'/>
			<arg value="&amp;&amp;"/>
			<arg value="rm"/>
			<arg value="*.swf"/>
		</exec>
		<exec executable="${sdk.dir}/platform-tools/adb">
			<arg value="shell"/>
			<arg value="cd"/>
			<arg value='"${collaboRhythm.tablet-device.pluginsPath}"'/>
			<arg value="&amp;&amp;"/>
			<arg value="rm"/>
			<arg value="*.swf"/>
		</exec>
	</target>
</project>