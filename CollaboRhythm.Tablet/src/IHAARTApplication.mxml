<?xml version="1.0"?>
<!--
Copyright 2014 Bree Alyeska (based on collaboRhythm work by John Moore and Scott Gilroy)

This file is part of iHAART & CollaboRhythm

iHAART and CollaboRhythm are free software: you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or
(at your option) any later  version.

iHAART and CollaboRhythm are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along with iHAART & CollaboRhythm. If not, see
<http://www.gnu.org/licenses/>.
-->
<s:ViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
							xmlns:s="library://ns.adobe.com/flex/spark"
							xmlns:mx="library://ns.adobe.com/flex/mx"
							xmlns:sharedView="collaboRhythm.shared.view.*"
							firstView="collaboRhythm.tablet.view.IHAARTHomeView"
							skinClass="collaboRhythm.iHAART.view.skins.IHAARTApplicationSkin"
							creationComplete="creationCompleteHandler(event)"
							runtimeDPIProvider="collaboRhythm.tablet.model.EmulatorDpiProvider">
	<fx:Style source="iHAART.css">
	</fx:Style>
	<fx:Script><![CDATA[
		import collaboRhythm.core.view.AboutApplicationView;
		import collaboRhythm.core.view.BusyView;
		import collaboRhythm.core.view.ConnectivityView;
		import collaboRhythm.core.view.IHAARTConnectivityView;
		import collaboRhythm.core.view.InAppPassCodeView;
		import collaboRhythm.iHAART.controller.IHAARTEventDispatcher;
		import collaboRhythm.iHAART.model.events.IHAARTEvent;

		import collaboRhythm.iHAART.sqlStore.controller.SQLStoreController;
		import collaboRhythm.iHAART.cloudMessaging.controller.CloudMessagingController;
		import collaboRhythm.shared.collaboration.controller.CollaborationController;
		import collaboRhythm.shared.model.healthRecord.document.MedicationScheduleItem;
		import collaboRhythm.tablet.controller.IHAARTApplicationController;
		import collaboRhythm.tablet.controller.TabletApplicationController;
		import collaboRhythm.tablet.controller.TabletApplicationController;

		import com.alyeska.shared.ane.gcm.libInterface.GCMPushInterface;
		import com.alyeska.shared.ane.gcm.libInterface.events.GCMEvent;

		import collaboRhythm.iHAART.model.SkinnableAlert;
		import collaboRhythm.tablet.view.IHAARTHomeView;

		import collaboRhythm.iHAART.model.Medication;
		import collaboRhythm.iHAART.model.DebuggingTools;

		import collaboRhythm.shared.view.MenuIcon;
		import collaboRhythm.shared.view.tablet.TabletViewBase;

		import com.alyeska.shared.ane.iHAART.libInterface.IHAARTInterface;
		import com.alyeska.shared.ane.iHAART.libInterface.IHAARTInterface;

		import mx.binding.utils.BindingUtils;
		import mx.collections.ArrayCollection;
		import mx.core.FlexGlobals;
		import mx.events.FlexEvent;
		import mx.events.CloseEvent;
		import mx.logging.ILogger;
		import mx.logging.Log;

		import spark.events.PopUpEvent;

		import spark.primitives.Graphic;

		[Bindable]
		private var _applicationController:IHAARTApplicationController;
		private var _logger:ILogger;

		public var deviceRegistrationID:String;

		[SkinPart(required="false")]
		public var connectivityView:ConnectivityView;

		[SkinPart(required="false")]
		public var busyView:BusyView;

		[SkinPart(required="false")]
		public var aboutApplicationView:AboutApplicationView;

		[SkinPart(required="false")]
		public var patientPointer:Graphic;

		[SkinPart(required="false")]
		public var clinicianPointer:Graphic;

		[SkinPart(required="false")]
		public var inAppPassCodeView:InAppPassCodeView;

		[Bindable]
		private var _collaborationController:CollaborationController;

		override protected function invokeHandler(event:InvokeEvent):void
		{
			super.invokeHandler(event);
			if (event.arguments.length > 0)
			{
				trace("Arguments: " + event.arguments.concat(" "));
			}
		}

		protected function creationCompleteHandler(event:FlexEvent):void
		{

			this.addEventListener(FlexEvent.MENU_KEY_PRESSED, menuKeyPressedHandler);

			main();
		}

		private function main():void
		{
//			applicationController.main();

			_applicationController = new IHAARTApplicationController(this);
			_applicationController.main();

			aboutApplicationView.settings = _applicationController.settings;

			_collaborationController = _applicationController.collaborationController;

//			this.addEventListener(IHAARTEvent.REGISTERED, gcmEvent_registeredHandler, false, 0, false);
//			this.addEventListener(IHAARTEvent.UNREGISTERED, gcmEvent_unregisteredHandler, false, 0, false);
//			this.addEventListener(IHAARTEvent.MESSAGE, handleIHAARTMessage, false, 0, false);
//			this.addEventListener(IHAARTEvent.FOREGROUND_MESSAGE, handleIHAARTFGMessage, false, 0, false);
//			this.addEventListener(IHAARTEvent.SCHEDULE_LOADED, handleIHAARTScheduleLoaded, false, 0, false);
//			this.addEventListener(IHAARTEvent.MEDICATION_IMAGE_LOADED, handleIHAARTMedicationImageLoaded, false, 0, false);
//			this.addEventListener(IHAARTEvent.ERROR, handleIHAARTError, false, 0, false);
		}

		public function get iHAARTHomeView():IHAARTHomeView
		{
			return navigator.activeView as IHAARTHomeView;
		}

		//		private function gcmEvent_registeredHandler(event:IHAARTEvent):void
		//		{
		//			DebuggingTools.taggedTrace("iHAARTApplication.handleRegistered event: " + event.message);
		//		}
		//
		//		private function gcmEvent_unregisteredHandler(event:IHAARTEvent):void
		//		{
		//			DebuggingTools.taggedTrace("iHAARTApplication.gcmEvent_unregisteredHandler event: " + event.message);
		//		}

		//		private function handleIHAARTMessage(event:IHAARTEvent):void
		//		{
		//			var alert:SkinnableAlert = new SkinnableAlert();
		//			SkinnableAlert.show(event.message, "Message");
		//		}
		//
		//		private function handleIHAARTFGMessage(event:IHAARTEvent):void
		//		{
		//			var alert:SkinnableAlert = new SkinnableAlert();
		//			SkinnableAlert.show(event.message, "FG Message");
		//		}
		//
		//		public function handleIHAARTScheduleLoaded(event:IHAARTEvent):void
		//		{
		//			DebuggingTools.taggedTrace("iHAARTApplication.handleIHAARTScheduleLoaded event: " + event.message);
		//		}
		//
		public function handleIHAARTMedicationImageLoaded(event:IHAARTEvent):void
		{
			DebuggingTools.taggedTrace("iHAARTApplication.handleIHAARTMedicationImageLoaded event: " + event.message);
		}
		//
		//		private function handleIHAARTError(event:IHAARTEvent):void
		//		{
		//			var alert:SkinnableAlert = new SkinnableAlert();
		//			SkinnableAlert.show(event.message, "Error");
		//		}

		private function menuKeyPressedHandler(event:FlexEvent):void
		{
			if (connectivityView.visible)
			{
				event.preventDefault();
			}
		}

		private function homeButton_clickHandler():void
		{
			var tabletViewBase:TabletViewBase = navigator && navigator.activeView ? navigator.activeView as
			TabletViewBase : null;
			if (tabletViewBase)
			{
				tabletViewBase.homeButton_clickHandler();
			}
			else if (navigator && navigator.activeView == null)
			{
				navigator.pushView(IHAARTHomeView);
			}
		}

		public function get applicationController():IHAARTApplicationController
		{
			return _applicationController;
		}

		public function set applicationController(value:IHAARTApplicationController):void
		{
			_applicationController = value;
		}

		public function get logger():ILogger
		{
			if (!_logger)
			{
				_logger = Log.getLogger(getQualifiedClassName(this).replace("::", "."));
			}
			return _logger;
		}

		public function set logger(value:ILogger):void
		{
			_logger = value;
		}
		]]></fx:Script>
	<!--<s:actionContent>-->
		<!--<s:VGroup id="registeredGroup" gap="0" horizontalAlign="center" includeInLayout="true" visible="true">-->
			<!--<s:Label id="registeredLabel" includeInLayout="true" visible="true"-->
					 <!--height="100%" width="100%" color="#ffffff" fontSize="12"-->
					 <!--text="Registered" verticalAlign="middle"/>-->
			<!--<s:HGroup id="registeredHGroup" includeInLayout="true" visible="true"-->
					  <!--width="100%" horizontalAlign="center">-->
				<!--<s:BitmapImage id="registeredIcon" includeInLayout="true" visible="false"-->
							   <!--source="@Embed(source='/assets/images/icons/Registered_96x96.png')"-->
							   <!--width="30" height="30"/>-->
			<!--</s:HGroup>-->
		<!--</s:VGroup>-->
	<!--</s:actionContent>-->
	<!--<s:navigationContent>-->
		<!--<s:Button id="backButton" label="back" click="homeButton_clickHandler()"/>-->
	<!--</s:navigationContent>-->
</s:ViewNavigatorApplication>