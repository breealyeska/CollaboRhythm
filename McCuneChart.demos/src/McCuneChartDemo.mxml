<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:controls="com.dougmccune.controls.*"
					   viewSourceURL="srcview/index.html"
					   width="1024"
					   height="600" xmlns:local="*"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)"
					   >
	<fx:Style source="ChartStyles.css" />
	<fx:Declarations>
<!--
						url="data/old_adobe_info.xml" 
		-->
		<mx:HTTPService id="stockInfo" 
						url="data/adobe_stock_info.xml" 
						result="dataResult(event)" fault="faultResult(event)" resultFormat="object" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				stockInfo.send();	
			}
			
			/**
			 * Called when HTTPService call completes the data load of the XML chart info.
			 */
			private function dataResult(event:ResultEvent):void
			{
				var tmpData:ArrayCollection = event.result.root.data;
				
				for (var i:int = 0; i < tmpData.length; i++)
				{
					var dataItem:Object = tmpData[i];
					
					// convert each date from a string to a Date object
					dataItem.date = dateParse(dataItem.date);
				}
				
				chart.data = tmpData;
				chart.addDataSet(tmpData, "date");
				chart.commitPendingDataChanges();
			}
			
			/**
			 * Simple parsing function to convert the date strings in our dataset to the equivalent Date object.
			 */
			public function dateParse(value:String):Date
			{
				var dateArray:Array = value.split('-');
				return new Date(dateArray[0], dateArray[1] - 1, dateArray[2]);
			}

			/**
			 * If an error occurs loading the XML chart info
			 */
			private function faultResult(event:FaultEvent):void
			{
				Alert.show("Error retrieving XML data", "Error");
			}
			
		]]>
	</fx:Script>
	<!--
	-->
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Rect id="backgroundRect" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#FFFFFF" />
				<s:GradientEntry color="#CCCCCC" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<controls:TouchScrollingScrubChart id="chart" left="10" right="10" top="10" bottom="10" styleName="com.dougmccune.controls.ScrubChartSkin" rangeChartVisible="true" headerVisible="true" footerVisible="true" showAnnotations="true" topBorderVisible="true"/>
</s:WindowedApplication>
